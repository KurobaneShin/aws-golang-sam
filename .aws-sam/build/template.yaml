AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Globals:
  Function:
    Timeout: 5
    MemorySize: 128
Resources:
  SenderFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: SenderFunction
    Properties:
      Handler: main
      CodeUri: SenderFunction
      Runtime: provided.al2023
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - events:PutEvents
          Resource:
            Fn::GetAtt:
            - EventBus
            - Arn
  ReceiverFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: ReceiverFunction
    Properties:
      Handler: main
      Runtime: provided.al2023
      CodeUri: ReceiverFunction
      Events:
        CloudWatchEvent:
          Type: CloudWatchEvent
          Properties:
            EventBusName:
              Ref: EventBus
            Pattern:
              source:
              - custom.myapp
              detail-type:
              - MyCustomEvent
  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: MyCustomEventBus
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: HelloWorldFunction
    Properties:
      CodeUri: HelloWorldFunction
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
      - x86_64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /hello
            Method: GET
      Environment:
        Variables:
          PARAM1: VALUE
  MyFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: MyFunction
    Properties:
      CodeUri: MyFunction
      Handler: main
      Runtime: provided.al2023
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MyDynamoDBTable
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /dynamo
            Method: GET
  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: MyTable
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  EventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - custom.myapp
        detail-type:
        - MessageFromSender
      Targets:
      - Arn:
          Fn::GetAtt:
          - ReceiverFunction
          - Arn
        Id: ReceiverFunction
Outputs:
  HelloWorldAPI:
    Description: API Gateway endpoint URL for Prod environment for First Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: First Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
